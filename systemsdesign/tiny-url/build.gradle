plugins {
    id 'org.springframework.boot' version '2.2.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'java-library'
    id 'groovy'
}

group = 'com.neeraj'
version = '1.0.0-SNAPSHOT'

repositories {
    mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:2.2.0.RELEASE"
        mavenBom "org.springframework.cloud:spring-cloud-starter-parent:Greenwich.SR3"
    }
}

dependencies {

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
// https://mvnrepository.com/artifact/io.springfox/springfox-swagger2
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'

    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.5.2'

    implementation 'org.springframework.boot:spring-boot-starter-web'
// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-aop
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop'

// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-jpa
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'

// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-security
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security'

// https://mvnrepository.com/artifact/org.modelmapper/modelmapper
    compile group: 'org.modelmapper', name: 'modelmapper', version: '2.3.5'

// https://mvnrepository.com/artifact/com.h2database/h2
    implementation group: 'com.h2database', name: 'h2', version: '1.4.200'

// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-cache
//    compile group: 'org.springframework.boot', name: 'spring-boot-starter-cache'
//    compile "org.springframework.data:spring-data-redis"
//    compile 'redis.clients:jedis:3.1.0'

    testImplementation('org.springframework.boot:spring-boot-starter-test')

    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
}

test {
    useJUnitPlatform()
    afterTest { desc, result ->
        logger.quiet "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
        if (!desc.parent) {
            println("${result.resultType} " +
                    "(${result.testCount} tests, " +
                    "${result.successfulTestCount} successes, " +
                    "${result.failedTestCount} failures, " +
                    "${result.skippedTestCount} skipped)")
        }
    }
}